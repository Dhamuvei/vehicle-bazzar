Text194 lines7.6KB24 hoursTTL
Shades of Purple
raw
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
                    HTTP                        DRIVER
CLIENT (FRONT-END)   <=>    SERVER (BACK-END)    <=>    DATABASE
     (React)                    (Node)                  (Mongo)

DATABASE - Collection of Data
DBMS - Database Management Systems

RDBMS - Relational DBMS
    - Tables (Column - Header, Rows - Data)
    - Structured
    - Relationship can be attained between data
    - SQL (Structured Query Language), SEQUEL (Structured English QUEry Language)
    - Examples/Products => MySQL, SQL Server, PostgreSQL, Oracle etc.,

NRDBMS - Non-Relational DBMS (NoSQL)
    - BSON (Binary JSON) - Collections
    - Columns - Fields, Rows - Documents
    - Un-Structured
    - No Relationship between data
    - JS Functions
    - Examples/Products => Mongo, Cassandra, CouchDB, Redis etc.,

MYSQL
    INSTALLATION
        - MySQL Server (Default Port - 3306)
            username - root
            password - 12345
        - MySQL Workbench

    DATA TYPES
        INT - 121, 342423, 51212
        INT(4) - 1213, 2131, 1, 313, 131, 13312
        FLOAT - 454.1515, 4515.1515, 454.321
        FLOAT(3) - 123.22232, 23.2323, 323.2322
        FLOAT(3,2) - 232.23, 3.23
        VARCHAR(5) - Tamil, SADasd, 213wa, 23131
        DATE - 2001/05/21, 2020/02/28
        DATETIME - 2020/02/28 12:45:36
        BOOLEAN - TRUE, FALSE => TINYINT(1) => 1, 0
        ENUM("male", "female", "other")

    SQL TYPES
        DDL (Data Definition Language)
            -- Creating Database/Schema
                CREATE DATABASE/SCHEMA <name>;
                => CREATE DATABASE guvi_blog;
                => CREATE SCHEMA guvi_blog;
            
            -- Deleting Database/Schema
                DROP DATABASE/SCHEMA <name>;
                => DROP DATABASE guvi_blog;
                => DROP SCHEMA guvi_blog;

            -- Renaming Database/Schema
                ALTER DATABASE/SCHEMA <name> MODIFY NAME = <new_name>;
                => ALTER DATABASE guvi_blog MODIFY NAME = guvi_blogspot;
                => ALTER SCHEMA guvi_blog MODIFY NAME = guvi_blogspot;

                RENAME DATABASE <name> TO <new_name>;
                => RENAME DATABASE guvi_blog TO guvi_blogspot;

            -- Using Database
                USE <name>;
                => USE guvi_blog;

            -- Creating Table
                CREATE TABLE <name> (
                    <col1_name> <col1_datatype>,
                    <col2_name> <col2_datatype>
                )
                =>  CREATE TABLE users (
                        id INT,
                        first_name VARCHAR(25),
                        last_name VARCHAR(25),
                        email VARCHAR(50),
                        active BOOLEAN,
                        height FLOAT(1, 1),
                        gender ENUM("male", "female", "other")
                    );

            -- Deleting Table
                DROP TABLE <name>;
                => DROP TABLE users;

            -- Altering Table
                -- Renaming
                    ALTER TABLE <name> RENAME TO <new_name>;
                    => ALTER TABLE users RENAME TO end_users;
                
                -- Add Column
                    ALTER TABLE <name> ADD COLUMN <col_name> <col_datatype>;
                    ALTER TABLE <name> 
                        ADD COLUMN <col1_name> <col1_datatype>, 
                        ADD COLUMN <col2_name> <col2_datatype>;
                    
                    => ALTER TABLE end_users ADD COLUMN password VARCHAR(15);
                    => ALTER TABLE end_users ADD COLUMN createdDate DATE ADD COLUMN weight INT;

                -- Remove Column
                    ALTER TABLE <name> DROP COLUMN <name>;
                    ALTER TABLE <name> 
                        DROP COLUMN <col1_name> <col1_datatype>, 
                        DROP COLUMN <col2_name> <col2_datatype>;

                    => ALTER TABLE end_users DROP COLUMN createdDate;
                    => ALTER TABLE end_users DROP COLUMN height, DROP COLUMN weight;
                    
                -- Rename Column
                    ALTER TABLE <name> RENAME COLUMN <name> TO <new_name>;
                    => ALTER TABLE end_users RENAME COLUMN password TO pass;

                -- Modify Column
                    ALTER TABLE <name> MODIFY <name> <new_data_type>;
                    => ALTER TABLE end_users MODIFY pass VARCHAR(25);

                -- Combined Example
                    ALTER TABLE end_users
                        ADD COLUMN height FLOAT(1, 1),
                        ADD COLUMN weight INT,
                        DROP COLUMN active,
                        RENAME COLUMN pass TO password,
                        modify email varchar(100);

        DML (Data Manipulation Language)
            -- Create/Insert Data
                INSERT INTO <name> (col1_name, col2_name, col3_name) VALUES (col1_val, col2_val, col3_val);
                =>  INSERT INTO end_users (id, first_name, last_name, email, gender, password) 
                    VALUES (1, "Tamil", "Sekar", "tamil@guvi.in", "asda", "sadasa");

            -- Update Data
                UPDATE <name> SET <col1_name> = <col1_val>, <col2_name> = <col2_val>;
                =>  UPDATE end_users SET height = 5.6, weight = 60;

            -- Delete Data
                DELETE FROM <name>;
                =>  DELETE FROM end_users;

            -- Truncate Data
                TRUNCATE TABLE <name>;
                =>  TRUNCATE TABLE end_users;

        DQL (Data Query Language)
            -- Read data with all column projection
                SELECT * FROM <name>;
                => SELECT * FROM users;

            -- Read data with specific column projection
                SELECT <col1_name>, <col2_name> FROM <name>;
                => SELECT id, name, email FROM users;

            -- Read data with specific column projection with alias
                SELECT <col1_name> AS <col1_alias>, <col2_name> FROM <name>;
                => SELECT id AS user_id, name AS user_name, email FROM users;


    CLAUSE
        WHERE
            -- Conditions =, !=, >, >=, <, <=

            <SELECT/UPDATE/DELETE> WHERE <col1_name> <condition> <condition_val>;
            => SELECT * FROM users                      WHERE id > 5;
            => UPDATE users SET phone = "9876543210"    WHERE id < 4;
            => DELETE FROM users                        WHERE id = 10;

            AND
                => SELECT * FROM users WHERE id > 5 AND active = true;

            OR
                => SELECT * FROM users WHERE id > 5 OR active = true;

            IN
                => SELECT * FROM users WHERE id IN (1, 5, 9);
            
            BETWEEN
                => SELECT * FROM users WHERE id BETWEEN 4 AND 8;

            NOT
                => SELECT * FROM users WHERE id NOT IN (1, 5, 9);
                => SELECT * FROM users WHERE id NOT BETWEEN 4 AND 8;

            LIKE (With Wildcard Characters)
                -- Starts with 'a'
                    => SELECT * FROM users WHERE name LIKE "a%";

                -- Ends with 'a'
                    => SELECT * FROM users WHERE name LIKE "%a";
                
                -- Starts with 'c' and ends with 'h';
                    => SELECT * FROM users WHERE name LIKE "c%h";

                -- Has word 'to'
                    SELECT * FROM users WHERE name LIKE "%to%";

 Â© 2020 Josh Goebel
Powered by Node.js, Express, Highlight.js, and Love.